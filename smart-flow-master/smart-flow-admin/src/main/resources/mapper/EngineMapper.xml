<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="org.smartboot.smart.flow.admin.mapper.EngineMapper">

    <resultMap id="BaseResultMap" type="org.smartboot.smart.flow.admin.model.EngineConfig">
        <id column="id" property="id" jdbcType="BIGINT"/>
        <result column="engine_name" property="engineName" jdbcType="VARCHAR"/>
        <result column="content" property="content" jdbcType="BLOB"/>
        <result column="status" property="status" jdbcType="VARCHAR"/>
        <result column="version" property="version" jdbcType="VARCHAR"/>
        <result column="created" property="created" jdbcType="TIMESTAMP"/>
        <result column="updated" property="updated" jdbcType="TIMESTAMP"/>
    </resultMap>

    <insert id="insert" useGeneratedKeys="true" keyProperty="config.id">
        insert into engine_table(engine_name, content, created, updated)
        values(#{config.engineName}, #{config.content}, now(), now())
    </insert>

    <insert id="update">
        update engine_table
        set
         engine_name = #{config.engineName},
         content = #{config.content},
         version = version + 1
        where id = #{config.id}
    </insert>

    <select id="queryConfig" resultMap="BaseResultMap">
      select id, engine_name, status, version, created, updated
      from engine_table
      <if test="name != null">
        where engine_name like concat('%', #{name}, '%')
      </if>
      order by id desc
      limit #{start}, #{size}
    </select>

    <select id="count" resultType="java.lang.Long">
        select count(1)
        from engine_table
        <if test="name != null">
            where engine_name like concat('%', #{name}, '%')
        </if>
    </select>

    <select id="detail" resultMap="BaseResultMap">
        select *
        from engine_table
        where id = #{id}
    </select>

    <select id="getByName" resultMap="BaseResultMap">
        select *
        from engine_table
        where engine_name = #{name}
    </select>

    <update id="offline">
        update engine_table set status = 1, updated = now() where id = #{id}
    </update>

    <update id="online">
        update engine_table set status = 0, updated = now() where id = #{id}
    </update>


</mapper>